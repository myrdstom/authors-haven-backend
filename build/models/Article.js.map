{"version":3,"sources":["../../src/models/Article.js"],"names":["mongoose","plugin","slug","Schema","ArticleSchema","user","type","Types","ObjectId","ref","title","String","required","max","description","body","articleSlug","unique","author","avatar","profile","SchemaTypes","Url","likes","dislikes","comments","createdAt","Date","now","Article","model"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACAA,qBAASC,MAAT,CAAgBC,iCAAhB;;AACA,IAAMC,MAAM,GAAGH,qBAASG,MAAxB,C,CAEA;;AACA,IAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GADyB;AAK/BC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,IAAI,EAAEK,MADD;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,GAAG,EAAE;AAHA,GALwB;AAU/BC,EAAAA,WAAW,EAAE;AACXR,IAAAA,IAAI,EAAEK;AADK,GAVkB;AAa/BI,EAAAA,IAAI,EAAE;AACJT,IAAAA,IAAI,EAAEK,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAbyB;AAiB/BI,EAAAA,WAAW,EAAC;AACVV,IAAAA,IAAI,EAAEK,MADI;AAEVT,IAAAA,IAAI,EAAE,OAFI;AAGVe,IAAAA,MAAM,EAAE;AAHE,GAjBmB;AAsB/BC,EAAAA,MAAM,EAAC;AACLZ,IAAAA,IAAI,EAAEK;AADD,GAtBwB;AAyB/BQ,EAAAA,MAAM,EAAC;AACLC,IAAAA,OAAO,EAAEpB,qBAASqB,WAAT,CAAqBC;AADzB,GAzBwB;AA4B/BC,EAAAA,KAAK,EAAC,CACJ;AACElB,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD;AADR,GADI,CA5ByB;AAoC/Be,EAAAA,QAAQ,EAAC,CACP;AACEnB,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD;AADR,GADO,CApCsB;AA4C/BgB,EAAAA,QAAQ,EAAE,CACR;AACEpB,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QADf;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADR;AAKEM,IAAAA,IAAI,EAAE;AACJT,MAAAA,IAAI,EAAEK,MADF;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KALR;AASEc,IAAAA,SAAS,EAAE;AACTpB,MAAAA,IAAI,EAAEqB,IADG;AAET,iBAASA,IAAI,CAACC;AAFL;AATb,GADQ,CA5CqB;AA4D/BF,EAAAA,SAAS,EAAE;AACTpB,IAAAA,IAAI,EAAEqB,IADG;AAET,eAASA,IAAI,CAACC;AAFL;AA5DoB,CAAX,CAAtB;;AAiEA,IAAIC,OAAO,GAAI7B,qBAAS8B,KAAT,CAAe,UAAf,EAA2B1B,aAA3B,CAAf;;eAEeyB,O","sourcesContent":["import mongoose from 'mongoose';\r\nimport slug from 'mongoose-slug-generator';\r\nimport 'mongoose-type-url';\r\nmongoose.plugin(slug);\r\nconst Schema = mongoose.Schema;\r\n\r\n//Create Schema\r\nconst ArticleSchema = new Schema({\r\n  user: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'users'\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    max: 40\r\n  },\r\n  description: {\r\n    type: String\r\n  },\r\n  body: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  articleSlug:{\r\n    type: String,\r\n    slug: \"title\",\r\n    unique: true\r\n  },\r\n  author:{\r\n    type: String\r\n  },\r\n  avatar:{\r\n    profile: mongoose.SchemaTypes.Url\r\n  },\r\n  likes:[\r\n    {\r\n      user: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'users'\r\n      }\r\n    }\r\n  ],\r\n  dislikes:[\r\n    {\r\n      user: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'users'\r\n      }\r\n    }\r\n  ],\r\n  comments: [\r\n    {\r\n      user: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'users'\r\n      },\r\n      body: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      createdAt: {\r\n        type: Date,\r\n        default: Date.now\r\n      }\r\n    }\r\n  ],\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\nlet Article =  mongoose.model('articles', ArticleSchema);\r\n\r\nexport default Article;\r\n"],"file":"Article.js"}