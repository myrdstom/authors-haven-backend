{"version":3,"sources":["../src/index.js"],"names":["app","port","process","env","PORT","use","bodyParser","urlencoded","extended","json","passport","initialize","require","router","req","res","next","status","message","NODE_ENV","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CACA;;AACAJ,GAAG,CAACK,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACK,GAAJ,CAAQC,uBAAWG,IAAX,EAAR;AAEA;;;;AAIAT,GAAG,CAACK,GAAJ,CAAQK,qBAASC,UAAT,EAAR;AACAX,GAAG,CAACK,GAAJ,CAAQ,uBAAR;AAEA;;;;AAGAO,OAAO,CAAC,kBAAD,CAAP,CAA4BF,oBAA5B;AAEA;;;;;AAIAV,GAAG,CAACK,GAAJ,CAAQQ,kBAAR;AAEAb,GAAG,CAACK,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACzB,SAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAC1BS,IAAAA,OAAO,EAAC,oBADkB;AAE1BD,IAAAA,MAAM,EAAE;AAFkB,GAArB,CAAP;AAID,CALD;;AAQA,IAAGf,OAAO,CAACC,GAAR,CAAYgB,QAAZ,KAAyB,MAA5B,EAAoC;AAClCnB,EAAAA,GAAG,CAACoB,MAAJ,CAAWnB,IAAX,EAAiB,YAAM;AACrBoB,IAAAA,OAAO,CAACC,GAAR,kCAAsCrB,IAAtC;AACD,GAFD;AAGD;;eAEcD,G","sourcesContent":["import '@babel/polyfill';\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport passport from 'passport';\r\nimport './db/mongoose'\r\nimport cors from 'cors';\r\nimport router from './routes';\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 8000;\r\n//Body parser middleware\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\n/**\r\n * @desc Passport middleware\r\n */\r\n\r\napp.use(passport.initialize());\r\napp.use(cors());\r\n\r\n/**\r\n * @desc Passport Config. This is the passport strategy. Can be a local auth strategy, google auth strategy e.t.c\r\n */\r\nrequire('./utils/passport')(passport);\r\n\r\n/**\r\n * @desc User routes\r\n */\r\n\r\napp.use(router);\r\n\r\napp.use((req, res, next) =>{\r\n  return res.status(404).json({\r\n    message:'Resource not found',\r\n    status: false\r\n  })\r\n})\r\n\r\n\r\nif(process.env.NODE_ENV !== 'test') {\r\n  app.listen(port, () => {\r\n    console.log(`Server running on port ${port}`);\r\n  });\r\n}\r\n\r\nexport default app\r\n"],"file":"index.js"}