{"version":3,"sources":["../../../src/validation/users/registration.js"],"names":["Validator","require","isEmpty","regex","module","exports","validateRegisterInput","data","errors","password","confirmPassword","username","isEmail","email","test","password2","equals","isValid"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAAvB,C,CACA;;;AAEA,IAAME,KAAK,GAAG,+CAAd;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AAClD,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,IAAI,CAACE,QAAL,GAAgB,CAACP,OAAO,CAACK,IAAI,CAACE,QAAN,CAAR,GAA0BF,IAAI,CAACE,QAA/B,GAA0C,EAA1D;AACAF,EAAAA,IAAI,CAACG,eAAL,GAAuB,CAACR,OAAO,CAACK,IAAI,CAACG,eAAN,CAAR,GACjBH,IAAI,CAACG,eADY,GAEjB,EAFN;AAGAH,EAAAA,IAAI,CAACI,QAAL,GAAgB,CAACT,OAAO,CAACK,IAAI,CAACI,QAAN,CAAR,GAA0BJ,IAAI,CAACI,QAA/B,GAA0C,EAA1D;;AAEA,MAAIX,SAAS,CAACE,OAAV,CAAkBK,IAAI,CAACI,QAAvB,CAAJ,EAAsC;AAClCH,IAAAA,MAAM,CAACG,QAAP,GAAkB,CAAC,sBAAD,CAAlB;AACH;;AAED,MAAI,CAACX,SAAS,CAACY,OAAV,CAAkBL,IAAI,CAACM,KAAvB,CAAL,EAAoC;AAChCL,IAAAA,MAAM,CAACK,KAAP,GAAe,CAAC,kBAAD,CAAf;AACH;;AACD,MAAI,CAACV,KAAK,CAACW,IAAN,CAAWP,IAAI,CAACE,QAAhB,CAAL,EAAgC;AAC5BD,IAAAA,MAAM,CAACC,QAAP,GAAkB,CACd,sGADc,CAAlB;AAGH;;AAED,MAAIT,SAAS,CAACE,OAAV,CAAkBK,IAAI,CAACE,QAAvB,CAAJ,EAAsC;AAClCD,IAAAA,MAAM,CAACC,QAAP,GAAkB,CAAC,sBAAD,CAAlB;AACH;;AACD,MAAIT,SAAS,CAACE,OAAV,CAAkBK,IAAI,CAACG,eAAvB,CAAJ,EAA6C;AACzCF,IAAAA,MAAM,CAACO,SAAP,GAAmB,CAAC,oCAAD,CAAnB;AACH;;AAED,MAAI,CAACf,SAAS,CAACgB,MAAV,CAAiBT,IAAI,CAACE,QAAtB,EAAgCF,IAAI,CAACG,eAArC,CAAL,EAA4D;AACxDF,IAAAA,MAAM,CAACE,eAAP,GAAyB,CAAC,sBAAD,CAAzB;AACH;;AACD,SAAO;AACHF,IAAAA,MAAM,EAANA,MADG;AAEHS,IAAAA,OAAO,EAAEf,OAAO,CAACM,MAAD;AAFb,GAAP;AAIH,CAnCD","sourcesContent":["const Validator = require('validator');\r\nconst isEmpty = require('../isEmpty');\r\n// Validator library only works with string so so magic goes into making it work with non string types\r\n\r\nconst regex = /^(?=(.*[\\W])+)(?=(.*?[A-Z])+)(?!.*\\s).{7,32}$/;\r\n\r\nmodule.exports = function validateRegisterInput(data) {\r\n    let errors = {};\r\n    data.password = !isEmpty(data.password) ? data.password : '';\r\n    data.confirmPassword = !isEmpty(data.confirmPassword)\r\n        ? data.confirmPassword\r\n        : '';\r\n    data.username = !isEmpty(data.username) ? data.username : '';\r\n\r\n    if (Validator.isEmpty(data.username)) {\r\n        errors.username = ['Username is required'];\r\n    }\r\n\r\n    if (!Validator.isEmail(data.email)) {\r\n        errors.email = ['Email is invalid'];\r\n    }\r\n    if (!regex.test(data.password)) {\r\n        errors.password = [\r\n            'Please enter a password. It must contain a special character, a capital, and be 7-32 characters long',\r\n        ];\r\n    }\r\n\r\n    if (Validator.isEmpty(data.password)) {\r\n        errors.password = ['Password is required'];\r\n    }\r\n    if (Validator.isEmpty(data.confirmPassword)) {\r\n        errors.password2 = ['Confirm Password field is required'];\r\n    }\r\n\r\n    if (!Validator.equals(data.password, data.confirmPassword)) {\r\n        errors.confirmPassword = ['Passwords must match'];\r\n    }\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    };\r\n};\r\n"],"file":"registration.js"}