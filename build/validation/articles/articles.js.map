{"version":3,"sources":["../../../src/validation/articles/articles.js"],"names":["Validator","require","isEmpty","module","exports","validateArticleInput","data","errors","title","description","body","isLength","min","max","isValid"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAAvB,C,CACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACjD,MAAIC,MAAM,GAAG,EAAb;AAEAD,EAAAA,IAAI,CAACE,KAAL,GAAa,CAACN,OAAO,CAACI,IAAI,CAACE,KAAN,CAAR,GAAuBF,IAAI,CAACE,KAA5B,GAAoC,EAAjD;AACAF,EAAAA,IAAI,CAACG,WAAL,GAAmB,CAACP,OAAO,CAACI,IAAI,CAACG,WAAN,CAAR,GAA6BH,IAAI,CAACG,WAAlC,GAAgD,EAAnE;AACAH,EAAAA,IAAI,CAACI,IAAL,GAAY,CAACR,OAAO,CAACI,IAAI,CAACI,IAAN,CAAR,GAAsBJ,IAAI,CAACI,IAA3B,GAAkC,EAA9C;;AAEA,MAAI,CAACV,SAAS,CAACW,QAAV,CAAmBL,IAAI,CAACE,KAAxB,EAA+B;AAAEI,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAA/B,CAAL,EAA0D;AACtDN,IAAAA,MAAM,CAACC,KAAP,GAAe,CAAC,2CAAD,CAAf;AACH;;AACD,MAAI,CAACR,SAAS,CAACW,QAAV,CAAmBL,IAAI,CAACG,WAAxB,EAAqC;AAAEG,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAArC,CAAL,EAAkE;AAC9DN,IAAAA,MAAM,CAACE,WAAP,GAAqB,CAAC,8CAAD,CAArB;AACH;;AACD,MAAI,CAACT,SAAS,CAACW,QAAV,CAAmBL,IAAI,CAACI,IAAxB,EAA8B;AAAEE,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAA9B,CAAL,EAA4D;AACxDN,IAAAA,MAAM,CAACG,IAAP,GAAc,CAAC,6CAAD,CAAd;AACH;;AAED,MAAIV,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACE,KAAvB,CAAJ,EAAmC;AAC/BD,IAAAA,MAAM,CAACC,KAAP,GAAe,CAAC,mBAAD,CAAf;AACH;;AACD,MAAIR,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACG,WAAvB,CAAJ,EAAyC;AACrCF,IAAAA,MAAM,CAACE,WAAP,GAAqB,CAAC,yBAAD,CAArB;AACH;;AACD,MAAIT,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACI,IAAvB,CAAJ,EAAkC;AAC9BH,IAAAA,MAAM,CAACG,IAAP,GAAc,CAAC,kBAAD,CAAd;AACH;;AACD,SAAO;AACHH,IAAAA,MAAM,EAANA,MADG;AAEHO,IAAAA,OAAO,EAAEZ,OAAO,CAACK,MAAD;AAFb,GAAP;AAIH,CA9BD","sourcesContent":["const Validator = require('validator');\r\nconst isEmpty = require('../isEmpty');\r\n// Validator library only works with string so so magic goes into making it work with non string types\r\nmodule.exports = function validateArticleInput(data) {\r\n    let errors = {};\r\n\r\n    data.title = !isEmpty(data.title) ? data.title : '';\r\n    data.description = !isEmpty(data.description) ? data.description : '';\r\n    data.body = !isEmpty(data.body) ? data.body : '';\r\n\r\n    if (!Validator.isLength(data.title, { min: 2, max: 30 })) {\r\n        errors.title = ['Title must be between 2 and 30 characters'];\r\n    }\r\n    if (!Validator.isLength(data.description, { min: 10, max: 100 })) {\r\n        errors.description = ['Description be between 10 and 100 characters'];\r\n    }\r\n    if (!Validator.isLength(data.body, { min: 10, max: 1000 })) {\r\n        errors.body = ['Body must be between 10 and 1000 characters'];\r\n    }\r\n\r\n    if (Validator.isEmpty(data.title)) {\r\n        errors.title = ['Title is required'];\r\n    }\r\n    if (Validator.isEmpty(data.description)) {\r\n        errors.description = ['Description is required'];\r\n    }\r\n    if (Validator.isEmpty(data.body)) {\r\n        errors.body = ['Body is required'];\r\n    }\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors)\r\n    };\r\n};\r\n"],"file":"articles.js"}